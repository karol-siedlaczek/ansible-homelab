define command {
        command_name    ocsp_forward
        command_line    {{ nagios.scripts_path }}/ocsp_forward.sh $ARG1$ "$HOSTNAME$" "$SERVICEDESC$" "$SERVICESTATE$" "$SERVICEOUTPUT$"
}
 
define command {
        command_name    no_report
        command_line    $USER1$/check_dummy 3 "State was not reported in time"
}
 
define command {
        command_name    ok_report
        command_line    $USER1$/check_dummy 0 "OK"
}
 
define command {
        command_name    send_service_trap
        command_line    {{ nagios.scripts_path }}/send_service_trap.sh $ARG1$ public "$HOSTNAME$" "$SERVICEDESC$" $SERVICESTATEID$ "$SERVICEOUTPUT$" "$SERVICEGROUPNAME$" "$SERVICEDURATIONSEC$" "$LASTSERVICECHECK$" "$LASTSERVICESTATECHANGE$" "$SERVICEATTEMPT$"
}
 
define command {
        command_name    send_host_trap
        command_line    {{ nagios.scripts_path }}/send_host_trap.sh $ARG1$ public "$HOSTNAME$" "$HOSTSTATEID$" "$HOSTOUTPUT$" "$LASTHOSTSTATECHANGE$" "$HOSTLASTCHECK$" "$HOSTDURATIONSEC$" "$HOSTATTEMPT$" "$HOSTGROUPNAME$"
}
 
define command {
        command_name    check_snmp_storage
        command_line    /usr/bin/perl {{ nagios.scripts_path }}/checks/check_snmp_storage.pl -H $HOSTADDRESS$ -l $USER2$ -x $USER3$ -X $USER3$ -m "/" -L sha,aes -w $ARG1$ -c $ARG2$ -S 0,1
}

define command {	    # requires sysMemAvail.0 MIB on remote machine
        command_name    check_snmp_mem_usage
        command_line    {{ nagios.scripts_path }}/checks/check_snmp_mem.sh -H $HOSTADDRESS$ -l $USER2$ -X $USER3$ -w $ARG1$ -c $ARG2$ -n
}

define command {  	    # requires meminfo extend script in snmpd.conf on remote machine
        command_name    check_snmp_meminfo_usage
        command_line    {{ nagios.scripts_path }}/checks/check_snmp_meminfo.sh -H $HOSTADDRESS$ -l $USER2$ -X $USER3$ -w $ARG1$ -c $ARG2$ -n
}

define command {
        command_name    check_snmp_cpu_load
        command_line    /usr/bin/perl {{ nagios.scripts_path }}/checks/check_snmp_cpu_load.pl -H $HOSTADDRESS$ -l $USER2$ -x $USER3$ -X $USER3$ -L sha,aes  -w $ARG1$ -c $ARG2$ -T netsl
}

define command {
        command_name    check_snmp_process
        command_line	{{ nagios.scripts_path }}/checks/check_snmp_process.pl -H $HOSTADDRESS$ -l $USER2$ -x $USER3$ -X $USER3$ -L sha,aes -n $ARG1$ -w 0 -c 0
}

define command {
	    command_name	check_snmp_process_mem_usage
	    command_line	{{ nagios.scripts_path }}/checks/check_snmp_process.pl -H $HOSTADDRESS$ -l $USER2$ -x $USER3$ -X $USER3$ -L sha,aes -n $ARG1$ -m $ARG2$
}

define command {
        command_name    check_snmp_extend
        command_line    {{ nagios.scripts_path }}/checks/check_snmp_extend.sh $HOSTADDRESS$ $USER2$ $USER3$ $ARG1$
}

define command {
        command_name	check_snmp_raid
        command_line	/usr/bin/perl {{ nagios.scripts_path }}/checks/check_linux_snmp_raid.pl -H $HOSTADDRESS$ -v 3 -u $USER2$ -a $USER3$ -x $USER3$ -X AES -A SHA
}

define command {
        command_name    check_snmp_service
        command_line    {{ nagios.scripts_path }}/checks/check_snmp_service.sh -H $HOSTADDRESS$ -l $USER2$ -X $USER3$ -s $ARG1$
}

define command {
         command_name	check_ssl_cert
         command_line	{{ nagios.scripts_path }}/checks/check_ssl_cert.sh -h $HOSTNAME$ -w $ARG1$ -c $ARG2$
}

define command {
        command_name    check_http_ssl
        command_line    $USER1$/check_http -H $HOSTADDRESS$ -p $ARG1$ -S --url $ARG2$ -a $ARG3$ -t 5 -w $ARG4$ -c $ARG5$ -R $HOSTNOTES$ -f $ARG6$
}

define command {
        command_name    check_http_host_alive
        command_line    $USER1$/check_http -H "$HOSTNAME$" -I "$HOSTADDRESS$" -p 443 -S --url / -t 5 -w 5 -c 10 -R "$HOSTNOTES$" -f follow
}

define command {
        command_name    check_host_alive
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 100.0,40% -c 250.0,60% -p 5
}

define command {
        command_name	check_disk_mount
	    command_line	{{ nagios.scripts_path }}/checks/check_disk_mount.sh $ARG1$
}

define command {
	    command_name	check_domain_expiration
	    command_line	{{ nagios.scripts_path }}/checks/check_domain_expiration.sh -d "$HOSTNAME$" -w $ARG1$ -c $ARG2$
}

###############################################################################
# COMMANDS.CFG - SAMPLE COMMAND DEFINITIONS FOR NAGIOS 4.4.6
#
#
# NOTES: This config file provides you with some example command definitions
#        that you can reference in host, service, and contact definitions.
#
#        You don't need to keep commands in a separate file from your other
#        object definitions.  This has been done just to make things easier to
#        understand.
#
###############################################################################



################################################################################
#
# SAMPLE NOTIFICATION COMMANDS
#
# These are some example notification commands.  They may or may not work on
# your system without modification.  As an example, some systems will require
# you to use "/usr/bin/mailx" instead of "/usr/bin/mail" in the commands below.
#
################################################################################

define command {
    command_name    notify-host-by-email
    command_line    /usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **" $CONTACTEMAIL$
}



define command {
    command_name    notify-service-by-email
    command_line    /usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
}



################################################################################
#
# SAMPLE HOST CHECK COMMANDS
#
################################################################################

# Removed in Debian because it conflicts with the command of the same name
# defined in ping.cfg, which is part of monitoring-plugins-basic.
#
## This command checks to see if a host is "alive" by pinging it
## The check must result in a 100% packet loss or 5 second (5000ms) round trip
## average time to produce a critical error.
## Note: Five ICMP echo packets are sent (determined by the '-p 5' argument)
#
#define command {
#
#    command_name    check-host-alive
#    command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5
#}



################################################################################
#
# SAMPLE SERVICE CHECK COMMANDS
#
# These are some example service check commands.  They may or may not work on
# your system, as they must be modified for your plugins.  See the HTML
# documentation on the plugins for examples of how to configure command definitions.
#
# NOTE:  The following 'check_local_...' functions are designed to monitor
#        various metrics on the host that Nagios is running on (i.e. this one).
################################################################################

define command {

    command_name    check_local_disk
    command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
}



define command {

    command_name    check_local_load
    command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
}



define command {

    command_name    check_local_procs
    command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$
}



define command {

    command_name    check_local_users
    command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
}



define command {

    command_name    check_local_swap
    command_line    $USER1$/check_swap -w $ARG1$ -c $ARG2$
}



define command {

    command_name    check_local_mrtgtraf
    command_line    $USER1$/check_mrtgtraf -F $ARG1$ -a $ARG2$ -w $ARG3$ -c $ARG4$ -e $ARG5$
}



################################################################################
# NOTE:  The following 'check_...' commands are used to monitor services on
#        both local and remote hosts.
################################################################################

# Removed in Debian because it conflicts with the command of the same of
# defined in ftp.cfg, which is part of monitoring-plugins-basic.
#
#define command {
#
#    command_name    check_ftp
#    command_line    $USER1$/check_ftp -H $HOSTADDRESS$ $ARG1$
#}



# Removed in Debian because it conflicts with the command of the same of
# defined in hppjd.cfg, which is part of monitoring-plugins-standard.
#
#define command {
#
#    command_name    check_hpjd
#    command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ $ARG1$
#}



define command {

    command_name    check_snmp
    command_line    $USER1$/check_snmp -H $HOSTADDRESS$ $ARG1$
}



# Removed in Debian because it conflicts with the command of the same of
# defined in http.cfg, which is part of monitoring-plugins-basic.
#
#define command {
#
#    command_name    check_http
#    command_line    $USER1$/check_http -I $HOSTADDRESS$ $ARG1$
#}



# Removed in Debian because it conflicts with the command of the same of
# defined in ssh.cfg, which is part of monitoring-plugins-basic.
#
#define command {
#
#    command_name    check_ssh
#    command_line    $USER1$/check_ssh $ARG1$ $HOSTADDRESS$
#}



# Removed in Debian because it conflicts with the command of the same of
# defined in dhcp.cfg, which is part of monitoring-plugins-basic.
#
#define command {
#
#    command_name    check_dhcp
#    command_line    $USER1$/check_dhcp $ARG1$
#}



# Removed in Debian because it conflicts with the command of the same of
# defined in ping.cfg, which is part of monitoring-plugins-basic.
#
#define command {
#
#    command_name    check_ping
#    command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
#}



# Removed in Debian because it conflicts with the command of the same of
# defined in mail.cfg, which is part of monitoring-plugins-basic.
#
#define command {
#
#    command_name    check_pop
#    command_line    $USER1$/check_pop -H $HOSTADDRESS$ $ARG1$
#}



# Removed in Debian because it conflicts with the command of the same of
# defined in mail.cfg, which is part of monitoring-plugins-basic.
#
#define command {
#
#    command_name    check_imap
#    command_line    $USER1$/check_imap -H $HOSTADDRESS$ $ARG1$
#}



# Removed in Debian because it conflicts with the command of the same of
# defined in mail.cfg, which is part of monitoring-plugins-basic.
#
#define command {
#
#    command_name    check_smtp
#    command_line    $USER1$/check_smtp -H $HOSTADDRESS$ $ARG1$
#}



# Removed in Debian because it conflicts with the command of the same of
# defined in tcp_ucp.cfg, which is part of monitoring-plugins-basic.
#
#define command {
#
#    command_name    check_tcp
#    command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
#}



# Removed in Debian because it conflicts with the command of the same of
# defined in tcp_ucp.cfg, which is part of monitoring-plugins-basic.
#
#define command {
#
#    command_name    check_udp
#    command_line    $USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
#}



# Removed in Debian because it conflicts with the command of the same of
# defined in nt.cfg, which is part of monitoring-plugins-standard.
#
#define command {
#
#    command_name    check_nt
#    command_line    $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -v $ARG1$ $ARG2$
#}



################################################################################
#
# SAMPLE PERFORMANCE DATA COMMANDS
#
# These are sample performance data commands that can be used to send performance
# data output to two text files (one for hosts, another for services).  If you
# plan on simply writing performance data out to a file, consider using the
# host_perfdata_file and service_perfdata_file options in the main config file.
#
################################################################################

define command {

    command_name    process-host-perfdata
    command_line    /usr/bin/printf "%b" "$LASTHOSTCHECK$\t$HOSTNAME$\t$HOSTSTATE$\t$HOSTATTEMPT$\t$HOSTSTATETYPE$\t$HOSTEXECUTIONTIME$\t$HOSTOUTPUT$\t$HOSTPERFDATA$\n" >> /var/lib/nagios4/host-perfdata.out
}



define command {

    command_name    process-service-perfdata
    command_line    /usr/bin/printf "%b" "$LASTSERVICECHECK$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICESTATE$\t$SERVICEATTEMPT$\t$SERVICESTATETYPE$\t$SERVICEEXECUTIONTIME$\t$SERVICELATENCY$\t$SERVICEOUTPUT$\t$SERVICEPERFDATA$\n" >> /var/lib/nagios4/service-perfdata.out
}
